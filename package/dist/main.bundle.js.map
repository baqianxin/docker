{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/dialog/app.dialog.example.ts","./src/app/dialog/dialog-data-example-dialog.html","./src/app/dialog/dialog-data-example.css","./src/app/dialog/dialog-data-example.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".example-h2 {\\n    margin: 10px;\\n}\\n\\n.example-section {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-line-pack: center;\\n        align-content: center;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    height: 60px;\\n}\\n\\n.example-margin {\\n    margin: 0 10px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<mat-toolbar>\\n    <button mat-button [matMenuTriggerFor]=\\\"animals\\\">Animal index</button>\\n\\n    <mat-menu #animals=\\\"matMenu\\\">\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"vertebrates\\\">Vertebrates</button>\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"invertebrates\\\">Invertebrates</button>\\n    </mat-menu>\\n\\n    <mat-menu #vertebrates=\\\"matMenu\\\">\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"fish\\\">Fishes</button>\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"amphibians\\\">Amphibians</button>\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"reptiles\\\">Reptiles</button>\\n        <button mat-menu-item>Birds</button>\\n        <button mat-menu-item>Mammals</button>\\n    </mat-menu>\\n\\n    <mat-menu #invertebrates=\\\"matMenu\\\">\\n        <button mat-menu-item>Insects</button>\\n        <button mat-menu-item>Molluscs</button>\\n        <button mat-menu-item>Crustaceans</button>\\n        <button mat-menu-item>Corals</button>\\n        <button mat-menu-item>Arachnids</button>\\n        <button mat-menu-item>Velvet worms</button>\\n        <button mat-menu-item>Horseshoe crabs</button>\\n    </mat-menu>\\n\\n    <mat-menu #fish=\\\"matMenu\\\">\\n        <button mat-menu-item>Baikal oilfish</button>\\n        <button mat-menu-item>Bala shark</button>\\n        <button mat-menu-item>Ballan wrasse</button>\\n        <button mat-menu-item>Bamboo shark</button>\\n        <button mat-menu-item>Banded killifish</button>\\n    </mat-menu>\\n\\n    <mat-menu #amphibians=\\\"matMenu\\\">\\n        <button mat-menu-item>Sonoran desert toad</button>\\n        <button mat-menu-item>Western toad</button>\\n        <button mat-menu-item>Arroyo toad</button>\\n        <button mat-menu-item>Yosemite toad</button>\\n    </mat-menu>\\n\\n    <mat-menu #reptiles=\\\"matMenu\\\">\\n        <button mat-menu-item>Banded Day Gecko</button>\\n        <button mat-menu-item>Banded Gila Monster</button>\\n        <button mat-menu-item>Black Tree Monitor</button>\\n        <button mat-menu-item>Blue Spiny Lizard</button>\\n        <button mat-menu-item disabled>Velociraptor</button>\\n    </mat-menu>\\n</mat-toolbar>\\n<mat-drawer-container class=\\\"example-container\\\">\\n    <mat-drawer mode=\\\"side\\\" opened=\\\"true\\\">\\n        <mat-progress-bar mode=\\\"buffer\\\"></mat-progress-bar>\\n        Drawer content\\n        <!--<mat-spinner></mat-spinner>-->\\n    </mat-drawer>\\n    <mat-drawer-content>\\n        <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n        Main content\\n        <div style=\\\"text-align:center\\\">\\n            <h1>\\n                Welcome to {{ title }}!\\n                <mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>\\n            </h1>\\n        </div>\\n        <mat-card>\\n            <mat-list role=\\\"list\\\">\\n                <mat-list-item role=\\\"listitem\\\">Item 1</mat-list-item>\\n                <mat-list-item role=\\\"listitem\\\">Item 2</mat-list-item>\\n                <mat-list-item role=\\\"listitem\\\">Item 3</mat-list-item>\\n            </mat-list>\\n        </mat-card>\\n        <mat-card class=\\\"button-list\\\">\\n            <mat-list-item>\\n                <button mat-button>Click me!</button>\\n                <button mat-raised-button>CK1</button>\\n                <button color=\\\"primary\\\" mat-icon-button>CK2</button>\\n                <button mat-fab>CK3</button>\\n                <button color=\\\"primary\\\" mat-mini-fab>CK4</button>\\n                <mat-icon>home</mat-icon>\\n\\n            </mat-list-item>\\n            <mat-list-item>\\n                <p>\\n                    <mat-button-toggle-group name=\\\"fontStyle\\\" aria-label=\\\"Font Style\\\">\\n                        <mat-button-toggle value=\\\"bold\\\">Bold</mat-button-toggle>\\n                        <mat-button-toggle value=\\\"italic\\\">Italic</mat-button-toggle>\\n                        <mat-button-toggle value=\\\"underline\\\">Underline</mat-button-toggle>\\n                    </mat-button-toggle-group>\\n                </p>\\n                <p>\\n                    <mat-chip-list>\\n                        <mat-chip>One fish</mat-chip>\\n                        <mat-chip>Two fish</mat-chip>\\n                        <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">Primary fish</mat-chip>\\n                        <mat-chip color=\\\"accent\\\" selected=\\\"true\\\">Accent fish</mat-chip>\\n                    </mat-chip-list>\\n                </p>\\n            </mat-list-item>\\n        </mat-card>\\n        <mat-card class=\\\"dialog\\\">\\n            <ol>\\n                <li>\\n                    <mat-form-field>\\n                        <input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"What's your name?\\\">\\n                        <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\"\\n                                (click)=\\\"value=''\\\">\\n                            <mat-icon>close</mat-icon>\\n                        </button>\\n                    </mat-form-field>\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                        <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\"\\n                               [errorStateMatcher]=\\\"matcher\\\">\\n                        <mat-hint>Errors appear instantly!</mat-hint>\\n                        <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n                            Please enter a valid email address\\n                        </mat-error>\\n                        <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                            Email is <strong>required</strong>\\n                        </mat-error>\\n                    </mat-form-field>\\n                </li>\\n                <li>\\n                    <button mat-raised-button (click)=\\\"openDialog()\\\">Pick one</button>\\n                </li>\\n                <li *ngIf=\\\"animal\\\">\\n                    You chose: <i>{{animal}}</i>\\n                </li>\\n            </ol>\\n        </mat-card>\\n        <mat-card class=\\\"input\\\">\\n            <form class=\\\"example-form\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Company (disabled)\\\" disabled value=\\\"Google\\\">\\n                </mat-form-field>\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <span matPrefix>+1 &nbsp;</span>\\n                    <input type=\\\"tel\\\" matInput placeholder=\\\"Telephone\\\">\\n                    <mat-icon matSuffix>mode_edit</mat-icon>\\n                </mat-form-field>\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput #message maxlength=\\\"256\\\" placeholder=\\\"Message\\\">\\n                    <mat-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong></mat-hint>\\n                    <mat-hint align=\\\"end\\\">{{message.value.length}} / 256</mat-hint>\\n                </mat-form-field>\\n                <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n                    <tr>\\n                        <td>\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput placeholder=\\\"First name\\\">\\n                            </mat-form-field>\\n                        </td>\\n                        <td>\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput placeholder=\\\"Long Last Name That Will Be Truncated\\\">\\n                            </mat-form-field>\\n                        </td>\\n                    </tr>\\n                </table>\\n\\n                <p>\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                        <textarea matInput placeholder=\\\"Address\\\">1600 Amphitheatre Pkwy</textarea>\\n                    </mat-form-field>\\n                    <mat-form-field class=\\\"example-full-width\\\">\\n                        <textarea matInput placeholder=\\\"Address 2\\\"></textarea>\\n                    </mat-form-field>\\n                </p>\\n\\n                <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n                    <tr>\\n                        <td>\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput placeholder=\\\"City\\\">\\n                            </mat-form-field>\\n                        </td>\\n                        <td>\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput placeholder=\\\"State\\\">\\n                            </mat-form-field>\\n                        </td>\\n                        <td>\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput #postalCode maxlength=\\\"5\\\" placeholder=\\\"Postal Code\\\" value=\\\"94043\\\">\\n                                <mat-hint align=\\\"end\\\">{{postalCode.value.length}} / 5</mat-hint>\\n                            </mat-form-field>\\n                        </td>\\n                    </tr>\\n                </table>\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\"\\n                           [matAutocomplete]=\\\"auto\\\">\\n                    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n                        <mat-option *ngFor=\\\"let option of options\\\" [value]=\\\"option\\\">\\n                            {{ option }}\\n                        </mat-option>\\n                    </mat-autocomplete>\\n                </mat-form-field>\\n            </form>\\n        </mat-card>\\n        <div class=\\\"checkbox\\\">\\n            <mat-card>\\n                <mat-card-content>\\n                    <h2 class=\\\"example-h2\\\">Checkbox configuration</h2>\\n\\n                    <section class=\\\"example-section\\\">\\n                        <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\">Checked</mat-checkbox>\\n                        <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"indeterminate\\\">Indeterminate</mat-checkbox>\\n                    </section>\\n\\n                    <section class=\\\"example-section\\\">\\n                        <label class=\\\"example-margin\\\">Align:</label>\\n                        <mat-radio-group [(ngModel)]=\\\"labelPosition\\\">\\n                            <mat-radio-button class=\\\"example-margin\\\" value=\\\"after\\\">After</mat-radio-button>\\n                            <mat-radio-button class=\\\"example-margin\\\" value=\\\"before\\\">Before</mat-radio-button>\\n                        </mat-radio-group>\\n                    </section>\\n\\n                    <section class=\\\"example-section\\\">\\n                        <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox>\\n                    </section>\\n                </mat-card-content>\\n            </mat-card>\\n\\n            <mat-card class=\\\"result\\\">\\n                <mat-card-content>\\n                    <h2 class=\\\"example-h2\\\">Result</h2>\\n\\n                    <section class=\\\"example-section\\\">\\n                        <mat-checkbox\\n                                class=\\\"example-margin\\\"\\n                                [(ngModel)]=\\\"checked\\\"\\n                                [(indeterminate)]=\\\"indeterminate\\\"\\n                                [labelPosition]=\\\"labelPosition\\\"\\n                                [disabled]=\\\"disabled\\\">\\n                            I'm a checkbox\\n                        </mat-checkbox>\\n                    </section>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n        <div class=\\\"datepicker\\\">\\n            <mat-card>\\n\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Angular forms\\\" [formControl]=\\\"date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker1></mat-datepicker>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Angular forms (w/ deserialization)\\\"\\n                           [formControl]=\\\"serializedDate\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker2></mat-datepicker>\\n                </mat-form-field>\\n\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Value binding\\\" [value]=\\\"date.value\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker3></mat-datepicker>\\n                </mat-form-field>\\n                <p>\\n                    <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"dp1\\\" placeholder=\\\"Completely disabled\\\" disabled>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"dp1\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #dp1></mat-datepicker>\\n                    </mat-form-field>\\n                </p>\\n\\n                <p>\\n                    <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"dp2\\\" placeholder=\\\"Popup disabled\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"dp2\\\" disabled></mat-datepicker-toggle>\\n                        <mat-datepicker #dp2></mat-datepicker>\\n                    </mat-form-field>\\n                </p>\\n\\n                <p>\\n                    <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"dp3\\\" placeholder=\\\"Input disabled\\\" disabled>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"dp3\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #dp3 disabled=\\\"false\\\"></mat-datepicker>\\n                    </mat-form-field>\\n                </p>\\n                <p>\\n                    <mat-form-field>\\n                        <mat-select placeholder=\\\"Toppings\\\" [formControl]=\\\"toppings\\\" multiple>\\n                            <mat-select-trigger>\\n                                {{toppings.value ? toppings.value[0] : ''}}\\n                                <span *ngIf=\\\"toppings.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\n        (+{{toppings.value.length - 1}} others)\\n      </span>\\n                            </mat-select-trigger>\\n                            <mat-option *ngFor=\\\"let topping of toppingList\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </p>\\n            </mat-card>\\n            <mat-card>\\n                <mat-selection-list #shoes>\\n                    <mat-list-option *ngFor=\\\"let shoe of typesOfShoes\\\">\\n                        {{shoe}}\\n                    </mat-list-option>\\n                </mat-selection-list>\\n\\n                <p>\\n                    Options selected: {{shoes.selectedOptions.selected.length}}\\n                </p>\\n                <mat-paginator [length]=\\\"100\\\"\\n                               [pageSize]=\\\"10\\\"\\n                               [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\n                </mat-paginator>\\n            </mat-card>\\n        </div>\\n    </mat-drawer-content>\\n</mat-drawer-container>\\n<mat-divider></mat-divider>\\n<mat-spinner></mat-spinner>\\n\\n<div class=\\\"mat-app-background basic-container\\\">\\n    <app-dialog-data-example>loading</app-dialog-data-example>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import {Component} from '@angular/core';\nimport {MatDialog} from '@angular/material';\nimport {DialogDataExampleComponent} from './dialog/app.dialog.example';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        const isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n    }\n}\n\n/** @title Input with a custom ErrorStateMatcher */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'My App';\n    animal: string;\n    name: string;\n    checked = false;\n    indeterminate = false;\n    labelPosition = 'after';\n    disabled = false;\n    date = new FormControl(new Date());\n    serializedDate = new FormControl((new Date()).toISOString());\n\n    toppings = new FormControl();\n    toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n\n    myControl: FormControl = new FormControl();\n    options = [\n        'One',\n        'Two',\n        'Three'\n    ];\n    typesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\n    emailFormControl = new FormControl('', [\n        Validators.required,\n        Validators.email,\n    ]);\n\n    matcher = new MyErrorStateMatcher();\n\n    constructor(public dialog: MatDialog) {\n    }\n\n    openDialog(): void {\n        const dialogRef = this.dialog.open(DialogDataExampleComponent, {\n            width: '250px',\n            data: {name: this.name, animal: this.animal}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.animal = result;\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport 'hammerjs';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n} from '@angular/material';\nimport {AppComponent} from './app.component';\nimport {DialogDataExampleComponent, DialogDataExample} from './dialog/app.dialog.example';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n    imports: [\n        BrowserAnimationsModule,\n        BrowserModule,\n        CdkTableModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    bootstrap: [AppComponent],\n    declarations: [AppComponent, DialogDataExample, DialogDataExampleComponent],\n    entryComponents: [AppComponent, DialogDataExampleComponent],\n})\nexport class AppModule {\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Component, Inject} from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material';\n\n/**\n * @title Injecting data when opening a dialog\n */\n@Component({\n    selector: 'app-dialog-data-example',\n    templateUrl: 'dialog-data-example.html',\n    styleUrls: ['dialog-data-example.css']\n})\nexport class DialogDataExample {\n    constructor(public dialog: MatDialog) {\n    }\n\n    openDialog() {\n        this.dialog.open(DialogDataExampleComponent, {\n            data: {\n                animal: 'panda'\n            }\n        });\n    }\n}\n\n@Component({\n    selector: 'app-dialog-example',\n    templateUrl: 'dialog-data-example-dialog.html',\n})\n\nexport class DialogDataExampleComponent {\n    constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialog/app.dialog.example.ts","module.exports = \"<h1 mat-dialog-title>Favorite Animal</h1>\\n<div mat-dialog-content>\\n    My favorite animal is:\\n    <ul>\\n        <li>\\n            <span *ngIf=\\\"data.animal === 'panda'\\\">&#10003;</span> Panda\\n        </li>\\n        <li>\\n            <span *ngIf=\\\"data.animal === 'unicorn'\\\">&#10003;</span> Unicorn\\n        </li>\\n        <li>\\n            <span *ngIf=\\\"data.animal === 'lion'\\\">&#10003;</span> Lion\\n        </li>\\n    </ul>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog/dialog-data-example-dialog.html\n// module id = ./src/app/dialog/dialog-data-example-dialog.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog/dialog-data-example.css\n// module id = ./src/app/dialog/dialog-data-example.css\n// module chunks = main","module.exports = \"<button mat-button (click)=\\\"openDialog()\\\">Open dialog</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog/dialog-data-example.html\n// module id = ./src/app/dialog/dialog-data-example.html\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n// import 'hammerjs ';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}